---
- name: Certbot | Create repository to resolve letsencrypt challenge
  ansible.builtin.file:
    path: /var/www/letsencrypt/.well-known/acme-challenge/
    state: directory
    owner: www-data
    group: www-data
    mode: '0775'

- name: Certbot | Install Certbot's nginx package
  ansible.builtin.package:
    name: certbot
    state: present

- name: Certbot | Check if certificate already exists
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ nginx_certbot_domain_name }}/cert.pem"
  register: letsencrypt_cert

- name: Certbot | Copy nginx conf for certbot init
  ansible.builtin.template:
    src: templates/nginx_cerbot_init.j2
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: '0644'
  when: not letsencrypt_cert.stat.exists
  notify: Reload nginx

- name: Certbot | Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Certbot | Generate new certificate if doesn't exist
  tags: notest
  ansible.builtin.command: >-
    certbot certonly --authenticator webroot -w /var/www/letsencrypt  --noninteractive --agree-tos
    --email {{ nginx_certbot_certbot_email }} -d {{ nginx_certbot_domain_name }}
  register: output
  changed_when: output.rc != 0
  when: not letsencrypt_cert.stat.exists

- name: Certbot | Log Certbot output
  tags: notest
  ansible.builtin.lineinfile:
    dest: /var/log/certbot.log
    line: "{{ output }}"
    create: true
    mode: '0644'
    insertafter: EOF
  when: not letsencrypt_cert.stat.exists

- name: Certbot | Create repository to store renewal hook
  ansible.builtin.file:
    path: "/etc/letsencrypt/renewal-hooks/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - pre
    - post

- name: Certbot | Send certbot pre hook to open http port only during challenge resolution
  ansible.builtin.template:
    src: templates/pre_ufw.j2
    dest: /etc/letsencrypt/renewal-hooks/pre/ufw.sh
    owner: root
    group: root
    mode: '0740'
  when: nginx_certbot_deny_http

- name: Certbot | Send certbot post hook to close http port after challenge resolution
  ansible.builtin.template:
    src: templates/post_ufw.j2
    dest: /etc/letsencrypt/renewal-hooks/post/ufw.sh
    owner: root
    group: root
    mode: '0740'
  when: nginx_certbot_deny_http

- name: Certbot | Send certbot post hook to reload nginx configuration on certificate renewal
  ansible.builtin.template:
    src: files/reload-nginx.sh
    dest: /etc/letsencrypt/renewal-hooks/post/restart-nginx.sh
    owner: root
    group: root
    mode: '0740'
