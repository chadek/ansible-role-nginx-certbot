---
# defaults file for roles/nginx_certbot
nginx_certbot_domain_name: app.example.com
nginx_certbot_certbot_email: some.mail@example.com
nginx_certbot_deny_http: false
nginx_certbot_proxy_protocol: false

# whether use a provided examples by simply replacing with template name or
# define a custom template filling up custom template variables as bellow
nginx_certbot_app:
  {
    name: app,
    url: "http://localhost:2000",
    http_template_name: custom,
    upstream_template_name: custom_upstream,
  }

nginx_certbot_custom_http_block: |
  client_max_body_size 128M;

  location / {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://app-default;
  }

nginx_certbot_custom_upstream_block: |
  upstream app-default {
    zone app-default 64k;
    server 127.0.0.1:8000;
    keepalive 2;
  }

# Enable quic
# (by now, needs nginx_certbot_repo set to nginx if enabled)
nginx_certbot_quic: false
# Option must be use just ones per IP, pay attention to set to false
# for all vhost but one if you setup multihost environment
nginx_certbot_quic_reuseport: true

# Enables UDP off-loading for quic
nginx_certbot_quic_gso: false

# timeout in sec for Diffie-Hellman cert generation. Consider increasing this
# value if your processor processor frequency is low (or shared)
nginx_cerbot_dh_timeout: 1800

# Add this variable to activate general resolver configuration
# (by now, needs nginx_certbot_repo set to nginx-mainline if enabled)
# nginx_certbot_resolver: {
#   resolver: "127.0.0.53",
#   resolver_timeout: "20s"
# }

# Add this variables to stream connexions to upstream
# nginx_certbot_stream_name: mysql
# nginx_certbot_custom_stream_block: |
#   upstream mysql-stream {
#     hash $remote_addr consistent;
#     server 127.0.0.1:8080;
#   }
#   server {
#     listen 0.0.0.0:8080;
#     listen [::]:8080;
#     proxy_pass mysql-stream;
#     proxy_connect_timeout 30s;
#   }

# Add this variable to install nginx latest package
# nginx_certbot_repo: "nginx"

# Add this variable to sync cert across other peers on a load balanced environment
# nginx_certbot_share_cert: {
#   state: master,
#   peers: [
#     2001:41d0:d00:5b00::200
#   ]
# }

# Add this variable to allow certbot to validate several peers on a load balanced environment
# nginx_certbot_ha: {
#   lb_peers: [
#     ip1,
#     ip2
#   ]
# }

# Add this variable to customize reverse proxy log format
# nginx_certbot_custom_log: {
#   format: "log_format custom '$remote_addr - $upstream_addr - $remote_user [$time_local] \"$request\"
#            $status $bytes_sent $request_length \"$http_referer\" \"$http_user_agent\"';",
#   access_log: "syslog:server=unix:/dev/log,facility=local0,tag=nginx,nohostname,severity=info custom;",
#   error_log: "syslog:server=unix:/dev/log,facility=local0,tag=nginx,nohostname,severity=error;"
# }
